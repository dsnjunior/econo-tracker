---
import { and, eq } from "drizzle-orm";
import { ArrowLeft, Trash } from "lucide-react";

import App from "@/layouts/app.astro";
import Heading from "@/components/ui/heading.astro";
import { SellForm, sellForm } from "@/modules/sell/sell-form";
import { Success } from "@/components/form";
import { buttonVariants } from "@/components/ui/button";

import { db, schema } from "@/lib/db";
import { cn } from "@/lib/utils";

const { sellId } = Astro.params;
const { auth, t, form } = Astro.locals;

const session = await auth.validate();

if (!session || !sellId) {
  return Astro.redirect(Astro.locals.translatePath("/"));
}

const formResult = await form.getDataByName("sellForm", sellForm);

if (formResult?.data) {
  const result = await db
    .update(schema.sell)
    .set(formResult.data)
    .where(
      and(
        eq(schema.sell.id, sellId),
        eq(schema.sell.userId, session.user.userId),
      ),
    )
    .returning();

  return Astro.redirect(
    Astro.locals.translatePath(`/app/company/sells/${result[0].id}/products`),
  );
}

const sell = await db.query.sell.findFirst({
  where: and(
    eq(schema.sell.id, sellId),
    eq(schema.sell.userId, session.user.userId),
  ),
});

if (!sell) {
  return Astro.redirect(Astro.locals.translatePath("/app/company"));
}
---

<App>
  <div class="p-4 container">
    <div>
      <a
        href={Astro.locals.translatePath("/app/company")}
        class={cn(
          buttonVariants({ size: "sm", variant: "link" }),
          "-ml-4 mb-4",
        )}
      >
        <ArrowLeft className="w-4 h-4 mr-2" />
        {t("back")}
      </a>
      <div class="flex flex-col md:flex-row justify-between">
        <Heading
          title={t("sells.form.title")}
          description={t("sells.form.description")}
        />
        <div
          class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-2 mt-4 md:mt-0"
        >
          <a
            href={Astro.locals.translatePath(
              `/app/company/sells/${sellId}/delete`,
            )}
            class={buttonVariants({ variant: "destructive", size: "sm" })}
            data-astro-prefetch="false"
          >
            <Trash className="w-4 h-4 mr-2" />
            {t("sells.delete")}
          </a>
        </div>
      </div>
    </div>
    <div class="py-4" transition:name="form">
      {
        !!formResult?.data && (
          <Success lang={Astro.locals.lang} className="mb-4" />
        )
      }
      <SellForm
        serverErrors={formResult?.fieldErrors}
        sell={sell}
        client:only
      />
    </div>
  </div>
</App>
