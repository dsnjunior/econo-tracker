---
import { and, eq } from "drizzle-orm";

import { db, schema } from "@/lib/db";
import { createId } from "@/lib/id";

const { expenseId } = Astro.params;
const { auth } = Astro.locals;

const session = await auth.validate();

if (!session || !expenseId) {
  return Astro.redirect(Astro.locals.translatePath("/"));
}

const originalExpense = await db.query.expense.findFirst({
  where: and(
    eq(schema.expense.id, expenseId),
    eq(schema.expense.userId, session.user.userId),
  ),
});

if (!originalExpense) {
  return Astro.redirect(Astro.locals.translatePath("/"));
}

const id = createId("fixedExpense");

await db.insert(schema.fixedExpense).values({
  id,
  amount: originalExpense.amount,
  description: originalExpense.description,
  startDate: originalExpense.date,
  dueDay: new Date(originalExpense.date).getDate(),
  timeZone: originalExpense.timeZone,
  userId: session.user.userId,
  categoryId: originalExpense.categoryId,
});

await db
  .delete(schema.expense)
  .where(
    and(
      eq(schema.expense.id, expenseId),
      eq(schema.expense.userId, session.user.userId),
    ),
  );

return Astro.redirect(Astro.locals.translatePath(`/app/fixed-expenses/${id}`));
---
